(()=>{"use strict";const e=new class{constructor(){this.authState={isAuthenticated:!1}}async checkSupabaseSession(){try{console.log("[Auth] Checking Supabase session...");const e=await fetch("https://replyguy.appendment.com/api/auth/extension",{method:"GET",credentials:"include"});if(console.log("[Auth] Session check response status:",e.status),e.ok){const t=await e.json();if(console.log("[Auth] Session data:",t),t.authenticated&&t.user)return this.authState={isAuthenticated:!0,user:{id:t.user.id,email:t.user.email}},console.log("[Auth] Authentication successful"),this.authState}return console.log("[Auth] Authentication failed"),{isAuthenticated:!1}}catch(e){return console.error("[Auth] Auth check failed:",e),{isAuthenticated:!1}}}async waitForLogin(){return chrome.tabs.create({url:"https://replyguy.appendment.com/auth/login?extension=true"}),new Promise(e=>{const t=setInterval(async()=>{const s=await this.checkSupabaseSession();s.isAuthenticated&&(clearInterval(t),e(s))},2e3);setTimeout(()=>{clearInterval(t),e({isAuthenticated:!1})},3e5)})}getAuthState(){return this.authState}async logout(){this.authState={isAuthenticated:!1},console.log("[Auth] Logged out locally. Visit website to fully logout.")}},t=new class{async fetchWithAuth(e,t={}){const s=await fetch(`https://replyguy.appendment.com/api${e}`,{...t,credentials:"include",headers:{"Content-Type":"application/json",...t.headers}});if(!s.ok){if(401===s.status)throw new Error("Not authenticated");const e=await s.json().catch(()=>({error:"Request failed"}));throw new Error(e.error||`HTTP ${s.status}`)}return s.json()}async generateReply(e){return this.fetchWithAuth("/generate",{method:"POST",body:JSON.stringify(e)})}async getSuggestions(e){return this.fetchWithAuth("/suggest",{method:"POST",body:JSON.stringify({tweet:e})})}async generateMeme(e,t){return this.fetchWithAuth("/meme",{method:"POST",body:JSON.stringify({text:e,context:t})})}async getUsageLimits(){const[e,t]=await Promise.all([this.fetchWithAuth("/check-limits"),this.fetchWithAuth("/user/plan")]);return{repliesRemaining:e.repliesRemaining,repliesTotal:t.limits.replies,suggestionsRemaining:e.suggestionsRemaining,suggestionsTotal:t.limits.suggestions,memesRemaining:e.memesRemaining,memesTotal:t.limits.memes}}async getCurrentUser(){return this.fetchWithAuth("/auth/session")}};chrome.runtime.onInstalled.addListener(async()=>{await e.checkSupabaseSession()}),chrome.runtime.onMessage.addListener((s,a,n)=>((async()=>{try{switch(s.action){case"checkAuth":const a=await e.checkSupabaseSession();n({success:!0,data:a});break;case"generateReply":const i=await t.generateReply(s.data);n({success:!0,data:i});break;case"getSuggestions":const c=await t.getSuggestions(s.data.tweet);n({success:!0,data:c});break;case"generateMeme":const o=await t.generateMeme(s.data.text,s.data.context);n({success:!0,data:o});break;case"getUsageLimits":const r=await t.getUsageLimits();n({success:!0,data:r});break;case"openLogin":chrome.tabs.create({url:"https://replyguy.appendment.com/auth/login?extension=true"}),n({success:!0});break;default:n({success:!1,error:"Unknown action"})}}catch(e){console.error("Background script error:",e),n({success:!1,error:e instanceof Error?e.message:"Unknown error"})}})(),!0)),chrome.cookies.onChanged.addListener(async t=>{t.cookie.domain.includes("appendment.com")&&t.cookie.name.startsWith("sb-")&&(await e.checkSupabaseSession(),(await chrome.tabs.query({})).forEach(t=>{t.id&&chrome.tabs.sendMessage(t.id,{action:"authStateChanged",data:e.getAuthState()}).catch(()=>{})}))})})();