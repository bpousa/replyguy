(()=>{"use strict";const e=new class{constructor(){this.authState={isAuthenticated:!1}}async checkSupabaseSession(){try{console.log("[Auth] Checking Supabase session...");const e=await fetch("https://replyguy.appendment.com/api/auth/extension",{method:"GET",credentials:"include"});if(console.log("[Auth] Session check response status:",e.status),e.ok){const t=await e.json();if(console.log("[Auth] Session data:",t),t.authenticated&&t.user)return this.authState={isAuthenticated:!0,user:{id:t.user.id,email:t.user.email}},console.log("[Auth] Authentication successful"),this.authState}return console.log("[Auth] Authentication failed"),{isAuthenticated:!1}}catch(e){return console.error("[Auth] Auth check failed:",e),{isAuthenticated:!1}}}async waitForLogin(){return chrome.tabs.create({url:"https://replyguy.appendment.com/auth/login?extension=true"}),new Promise(e=>{const t=setInterval(async()=>{const s=await this.checkSupabaseSession();s.isAuthenticated&&(clearInterval(t),e(s))},2e3);setTimeout(()=>{clearInterval(t),e({isAuthenticated:!1})},3e5)})}getAuthState(){return this.authState}async logout(){this.authState={isAuthenticated:!1},console.log("[Auth] Logged out locally. Visit website to fully logout.")}},t=new class{async fetchWithAuth(e,t={}){const s=await fetch(`https://replyguy.appendment.com/api${e}`,{...t,credentials:"include",headers:{"Content-Type":"application/json",...t.headers}});if(!s.ok){if(401===s.status)throw new Error("Not authenticated");const e=await s.json().catch(()=>({error:"Request failed"}));if(console.error("[API] Error response:",e),e.details){const t=JSON.stringify(e.details);throw new Error(`${e.error}: ${t}`)}throw new Error(e.error||`HTTP ${s.status}`)}return s.json()}async generateReply(e){const t={...e};if(e.useCustomStyle&&e.userId){const s=`style_cache_${e.userId}`;try{const a=await new Promise(e=>chrome.storage.local.get(s,e));if(a[s]){const{style:i,timestamp:n}=a[s];Date.now()-n<864e5&&(console.log("[API] Using cached style for user:",e.userId),t.cachedStyle=i)}}catch(e){console.error("[API] Error reading from local storage:",e)}}const s=await this.fetchWithAuth("/process",{method:"POST",body:JSON.stringify(t)});if(s.data&&s.data.activeStyle&&e.userId){const t=`style_cache_${e.userId}`,a={activeStyle:s.data.activeStyle,sampleTweets:s.data.sampleTweets};try{await chrome.storage.local.set({[t]:{style:a,timestamp:Date.now()}}),console.log("[API] Cached new style for user:",e.userId)}catch(e){console.error("[API] Error writing to local storage:",e)}}return s}async getSuggestions(e){return this.fetchWithAuth("/suggest",{method:"POST",body:JSON.stringify(e)})}async getSuggestResearch(e){return this.fetchWithAuth("/suggest-research",{method:"POST",body:JSON.stringify(e)})}async generateMeme(e){return this.fetchWithAuth("/meme/generate",{method:"POST",body:JSON.stringify(e)})}async getUsageLimits(){try{const e=await this.fetchWithAuth("/check-limits",{method:"POST",body:JSON.stringify({})}),{limits:t}=e,s={name:t.plan_name||"Free",max_tweet_length:t.max_tweet_length||280,max_response_idea_length:t.max_response_idea_length||200,max_reply_length:t.max_reply_length||280,enable_long_replies:t.enable_long_replies||!1,enable_style_matching:t.enable_style_matching||!1,enable_perplexity_guidance:t.enable_perplexity_guidance||!1,enable_memes:t.enable_memes||!1,enable_write_like_me:t.enable_write_like_me||!1,meme_limit:t.meme_limit||0,memes_used:t.memes_used||0,suggestion_limit:t.suggestion_limit||0,suggestions_used:t.suggestions_used||0,reply_limit:t.reply_limit||10,replies_used:t.replies_used||0};return{repliesRemaining:t.repliesRemaining,repliesTotal:t.reply_limit,suggestionsRemaining:t.suggestionsRemaining,suggestionsTotal:t.suggestion_limit,memesRemaining:t.memesRemaining,memesTotal:t.meme_limit,dailyCount:t.dailyCount,dailyGoal:t.dailyGoal,userPlan:s}}catch(e){return console.error("[API] Failed to get usage limits:",e),{repliesRemaining:10,repliesTotal:10,suggestionsRemaining:0,suggestionsTotal:0,memesRemaining:0,memesTotal:0,userPlan:{name:"Free",max_tweet_length:280,max_response_idea_length:200,max_reply_length:280,enable_long_replies:!1,enable_style_matching:!1,enable_perplexity_guidance:!1,enable_memes:!1,enable_write_like_me:!1,meme_limit:0,memes_used:0,suggestion_limit:0,suggestions_used:0,reply_limit:10,replies_used:0}}}}async getCurrentUser(){return this.fetchWithAuth("/auth/session")}async updateDailyGoal(e){return this.fetchWithAuth("/user/daily-goal",{method:"POST",body:JSON.stringify({dailyGoal:e})})}async submitCorrection(e){return this.fetchWithAuth("/user-style/corrections",{method:"POST",body:JSON.stringify(e)})}};chrome.runtime.onInstalled.addListener(async()=>{await e.checkSupabaseSession()}),chrome.runtime.onMessage.addListener((s,a,i)=>a.id!==chrome.runtime.id?(console.warn("[Background] Rejecting message from unknown extension:",a.id),i({success:!1,error:"Unauthorized sender"}),!0):a.tab||a.origin===`chrome-extension://${chrome.runtime.id}`?((async()=>{try{switch(s.action){case"checkAuth":const a=await e.checkSupabaseSession();i({success:!0,data:a});break;case"generateReply":const n=await t.generateReply(s.data);i({success:!0,data:n});break;case"checkForCelebration":const o=await t.getUsageLimits();if(o&&void 0!==o.dailyCount&&void 0!==o.dailyGoal&&o.dailyCount>=o.dailyGoal){const e=`celebration_shown_${(new Date).toDateString()}`;chrome.storage.local.get(e,t=>{t[e]||(chrome.tabs.query({active:!0,currentWindow:!0},e=>{e[0]&&e[0].id&&chrome.tabs.sendMessage(e[0].id,{action:"triggerCelebration"})}),chrome.storage.local.set({[e]:!0}))})}i({success:!0});break;case"getSuggestions":const r=await t.getSuggestions(s.data);i({success:!0,data:r});break;case"getSuggestResearch":const c=await t.getSuggestResearch(s.data);i({success:!0,data:c});break;case"generateMeme":const l=await t.generateMeme(s.data);i({success:!0,data:l});break;case"getUsageLimits":const u=await t.getUsageLimits();i({success:!0,data:u});break;case"openLogin":chrome.tabs.create({url:"https://replyguy.appendment.com/auth/login?extension=true"}),i({success:!0});break;case"updateDailyGoal":const g=await t.updateDailyGoal(s.data.goal);i({success:!0,data:g});break;case"triggerPopupCelebration":chrome.runtime.sendMessage({action:"showCelebration"}).catch(()=>{}),i({success:!0});break;case"submitCorrection":const h=await t.submitCorrection(s.data);i({success:!0,data:h});break;default:i({success:!1,error:"Unknown action"})}}catch(e){console.error("Background script error:",e),i({success:!1,error:e instanceof Error?e.message:"Unknown error"})}})(),!0):(console.warn("[Background] Rejecting message from invalid origin:",a.origin),i({success:!1,error:"Invalid origin"}),!0)),chrome.cookies.onChanged.addListener(async t=>{t.cookie.domain.includes("appendment.com")&&t.cookie.name.startsWith("sb-")&&(await e.checkSupabaseSession(),(await chrome.tabs.query({})).forEach(t=>{t.id&&chrome.tabs.sendMessage(t.id,{action:"authStateChanged",data:e.getAuthState()}).catch(()=>{})}))})})();