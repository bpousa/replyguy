(()=>{"use strict";class e{constructor(e){this.overlay=null,this.responseType="neutral",this.tone="friendly",this.responseIdea="",this.replyLength="short",this.needsResearch=!1,this.perplexityGuidance="",this.includeMeme=!1,this.memeText="",this.currentReplyData=null,this.originalTweet="",this.memeTextMode="exact",this.tweet="",this.userPlan=null,this.usageLimits=null,this.isSuggestingIdea=!1,this.isSuggestingResearch=!1,this.researchSuggestions=[],this.useCustomStyle=!1,this.enableStyleMatching=!0,this.defaultSettings={},this.handleOutsideClick=e=>{const n=e.target,t=n.closest('[data-testid="reply"]')||n.closest('[role="group"]');!this.overlay||this.overlay.contains(n)||t||this.remove()},this.container=e}getReplyLengthLimit(e){switch(e){case"short":default:return 280;case"medium":return 560;case"long":return 1e3;case"extra-long":return 2e3}}async saveUserSettings(){if(chrome?.storage?.sync)try{await chrome.storage.sync.set({replyGuySettings:{responseType:this.responseType,tone:this.tone,replyLength:this.replyLength,needsResearch:this.needsResearch,includeMemes:this.includeMeme,useCustomStyle:this.useCustomStyle,enableStyleMatching:this.enableStyleMatching}}),console.log("[ReplyGuy] Saved user settings")}catch(e){console.error("[ReplyGuy] Failed to save settings:",e)}}async loadUserSettings(){if(chrome?.storage?.sync)try{const e=await chrome.storage.sync.get(["replyGuySettings"]);if(e.replyGuySettings){const n=e.replyGuySettings;console.log("[ReplyGuy] Loading saved settings:",n),this.responseType=n.responseType||this.responseType,console.log("[ReplyGuy] - responseType:",this.responseType),this.tone=n.tone||this.tone,console.log("[ReplyGuy] - tone:",this.tone),this.replyLength=n.replyLength||this.replyLength,console.log("[ReplyGuy] - replyLength:",this.replyLength),this.needsResearch=n.needsResearch??this.needsResearch,console.log("[ReplyGuy] - needsResearch:",this.needsResearch),this.includeMeme=n.includeMemes??this.includeMeme,console.log("[ReplyGuy] - includeMeme:",this.includeMeme),this.useCustomStyle=n.useCustomStyle??this.useCustomStyle,console.log("[ReplyGuy] - useCustomStyle:",this.useCustomStyle),this.enableStyleMatching=n.enableStyleMatching??this.enableStyleMatching,console.log("[ReplyGuy] - enableStyleMatching:",this.enableStyleMatching)}else console.log("[ReplyGuy] No saved settings found, using defaults")}catch(e){console.error("[ReplyGuy] Failed to load settings:",e)}}async showOptions(e,n){this.remove(),this.tweet=e,this.originalTweet=e,await this.loadUserSettings();try{if(!chrome.runtime?.id)return void console.error("[ReplyGuy] Extension context invalid");const e=await chrome.runtime.sendMessage({action:"getUsageLimits"});e.success&&e.data&&(this.usageLimits=e.data,this.userPlan=e.data.userPlan||e.data,console.log("[ReplyGuy] User plan loaded:",this.userPlan),console.log("[ReplyGuy] Usage limits:",this.usageLimits))}catch(e){if(e instanceof Error&&e.message.includes("Extension context invalidated"))return console.error("[ReplyGuy] Extension context invalidated"),alert("Reply Guy extension needs to be refreshed. Please reload this page."),void this.remove();console.error("[ReplyGuy] Failed to get user plan:",e)}this.overlay=document.createElement("div"),this.overlay.className="reply-guy-overlay",this.overlay.innerHTML=`\n      <style>\n        ${this.getComprehensiveStyles()}\n      </style>\n      <div class="reply-guy-header">\n        <div class="reply-guy-title">\n          <img src="${chrome.runtime.getURL("icons/reply_guy_logo.png")}" class="reply-guy-logo-icon" alt="Reply Guy" />\n          <span>Reply Guy</span>\n        </div>\n        <button class="reply-guy-close" aria-label="Close">×</button>\n      </div>\n      \n      <div class="reply-guy-content-scroll">\n        \x3c!-- Tweet Preview --\x3e\n        <div class="reply-guy-tweet-section">\n          <div class="reply-guy-tweet-preview">\n            ${this.escapeHtml(e)}\n          </div>\n        </div>\n        \n        \x3c!-- Response Idea --\x3e\n        <div class="reply-guy-option-group">\n          <div class="reply-guy-label-with-action">\n            <label class="reply-guy-option-label" for="reply-guy-idea">What do you want to say?</label>\n            <button class="reply-guy-suggest-btn" id="reply-guy-suggest">\n              <svg width="14" height="14" viewBox="0 0 24 24" fill="none">\n                <path d="M12 2L13.09 8.26L19 7L15.45 11.82L21 16L14.5 16.5L15 23L10.18 17.45L5 21L5.5 14.5L0 16L5.55 11.18L2 7L7.91 8.26L9 2L12 2Z" fill="currentColor"/>\n              </svg>\n              Suggest\n            </button>\n          </div>\n          <textarea \n            id="reply-guy-idea" \n            class="reply-guy-idea-input" \n            placeholder="Describe your response (e.g., 'Sympathize and share a similar experience')"\n            rows="3"\n            maxlength="${this.userPlan?.max_response_idea_length||200}"\n          >${this.responseIdea}</textarea>\n          <div class="reply-guy-char-count">\n            <span id="idea-char-count">0</span> / <span id="idea-char-limit">${this.userPlan?.max_response_idea_length||200}</span>\n          </div>\n        </div>\n        \n        \x3c!-- Core Controls: Type, Tone, Length --\x3e\n        <div class="reply-guy-grid-3-col">\n          \x3c!-- Response Type --\x3e\n          <div class="reply-guy-option-group">\n            <label class="reply-guy-option-label" for="reply-guy-response-type">Type</label>\n            <select class="reply-guy-select" id="reply-guy-response-type">\n              <option value="agree">👍 Agree</option>\n              <option value="disagree">🤔 Disagree</option>\n              <option value="neutral" selected>💭 Neutral</option>\n              <option value="other">✨ Creative</option>\n            </select>\n          </div>\n          \n          \x3c!-- Tone --\x3e\n          <div class="reply-guy-option-group">\n            <label class="reply-guy-option-label" for="reply-guy-tone">Tone</label>\n            <select class="reply-guy-select" id="reply-guy-tone">\n              <option value="friendly">😊 Friendly</option>\n              <option value="professional">💼 Professional</option>\n              <option value="casual">👋 Casual</option>\n              <option value="humorous">😄 Humorous</option>\n              <option value="empathetic">❤️ Empathetic</option>\n              <option value="witty">🎯 Witty</option>\n              <option value="sarcastic">😏 Sarcastic</option>\n              <option value="supportive">🤝 Supportive</option>\n              <option value="informative">📚 Informative</option>\n              <option value="formal">🎩 Formal</option>\n            </select>\n          </div>\n          \n          \x3c!-- Reply Length --\x3e\n          <div class="reply-guy-option-group">\n            <label class="reply-guy-option-label" for="reply-guy-length">Length</label>\n            <select class="reply-guy-select" id="reply-guy-length">\n              <option value="short">Short (280)</option>\n              <option value="medium" ${this.userPlan?.enable_long_replies?"":"disabled"}>Medium (560) ${this.userPlan?.enable_long_replies?"":"🔒"}</option>\n              <option value="long" ${this.userPlan?.enable_long_replies?"":"disabled"}>Long (1000) ${this.userPlan?.enable_long_replies?"":"🔒"}</option>\n              <option value="extra-long" ${!this.userPlan?.enable_long_replies||this.userPlan?.max_reply_length<2e3?"disabled":""}>Extra Long (2000) ${!this.userPlan?.enable_long_replies||this.userPlan?.max_reply_length<2e3?"🔒":""}</option>\n            </select>\n          </div>\n        </div>\n        \n        \x3c!-- Feature Toggles --\x3e\n        <div class="reply-guy-features-grid">\n          ${!1!==this.userPlan?.enable_write_like_me?'\n          <div class="reply-guy-option-group">\n            <label class="reply-guy-checkbox">\n              <input type="checkbox" id="reply-guy-write-like-me">\n              <span>Write like me ✍️</span>\n            </label>\n          </div>\n          ':""}\n          \n          ${!1!==this.userPlan?.enable_style_matching?'\n          <div class="reply-guy-option-group">\n            <label class="reply-guy-checkbox">\n              <input type="checkbox" id="reply-guy-match-style">\n              <span>Match tweet style 🎨</span>\n            </label>\n          </div>\n          ':""}\n          \n          ${!1!==this.userPlan?.enable_perplexity_guidance?'\n          <div class="reply-guy-option-group">\n            <label class="reply-guy-checkbox">\n              <input type="checkbox" id="reply-guy-research">\n              <span>Add research 🔍</span>\n            </label>\n          </div>\n          ':""}\n          \n          ${!1!==this.userPlan?.enable_memes?'\n          <div class="reply-guy-option-group">\n            <label class="reply-guy-checkbox">\n              <input type="checkbox" id="reply-guy-meme">\n              <span>Add a meme 🎭</span>\n            </label>\n          </div>\n          ':""}\n        </div>\n        \n        \x3c!-- Conditional Sections for Research and Meme --\x3e\n        <div id="reply-guy-research-section" class="reply-guy-collapsible-section" style="display: none;">\n          <div class="reply-guy-label-with-action">\n            <label class="reply-guy-option-label" for="reply-guy-perplexity">Research Guidance (Optional)</label>\n            <button class="reply-guy-suggest-btn" id="reply-guy-suggest-research" type="button">\n              <svg width="14" height="14" viewBox="0 0 24 24" fill="none">\n                <path d="M12 2L13.09 8.26L19 7L15.45 11.82L21 16L14.5 16.5L15 23L10.18 17.45L5 21L5.5 14.5L0 16L5.55 11.18L2 7L7.91 8.26L9 2L12 2Z" fill="currentColor"/>\n              </svg>\n              Suggest\n            </button>\n          </div>\n          <textarea\n            id="reply-guy-perplexity" \n            class="reply-guy-text-input" \n            placeholder="What specific facts, stats, or current events should we look for?"\n            rows="2"\n            maxlength="200"\n          ></textarea>\n          <div id="reply-guy-research-suggestions" style="display: none; margin-top: 8px;">\n            <p class="reply-guy-suggestion-label">Suggestions:</p>\n            <div class="reply-guy-suggestion-chips"></div>\n          </div>\n        </div>\n        \n        <div id="reply-guy-meme-options" class="reply-guy-collapsible-section" style="display: none;">\n          <div class="reply-guy-option-group">\n            <label class="reply-guy-option-label" style="font-size: 11px;">Meme text (optional)</label>\n            <input \n              type="text"\n              id="reply-guy-meme-text" \n              class="reply-guy-text-input" \n              placeholder="e.g., 'this is fine' or 'bugs everywhere'"\n              maxlength="100"\n            />\n          </div>\n          \n          <div id="reply-guy-meme-mode-section" style="display: none; margin-top: 12px;">\n            <div class="reply-guy-meme-mode">\n              <label class="reply-guy-radio">\n                <input type="radio" name="memeTextMode" value="exact" checked>\n                <span>Use my exact text</span>\n              </label>\n              <label class="reply-guy-radio">\n                <input type="radio" name="memeTextMode" value="enhance">\n                <span>Make it more creative with AI ✨</span>\n              </label>\n            </div>\n          </div>\n          \n          <div class="reply-guy-meme-info">\n            <p id="meme-info-empty">💡 <strong>Leave blank</strong> = AI creates meme text from your reply</p>\n            <p id="meme-info-exact" style="display: none;">✏️ Your exact text will be used: "<span id="meme-preview-text"></span>"</p>\n            <p id="meme-info-enhance" style="display: none;">✨ AI will enhance your idea to make it funnier</p>\n          </div>\n        </div>\n      </div>\n      \n      \x3c!-- Footer Actions and Usage --\x3e\n      <div class="reply-guy-footer">\n        <div class="reply-guy-actions">\n          <button class="reply-guy-generate-btn" id="reply-guy-generate">\n            Generate Reply\n          </button>\n        </div>\n        <label class="reply-guy-checkbox reply-guy-save-defaults-checkbox">\n          <input type="checkbox" id="reply-guy-save-defaults">\n          <span>Save as default settings</span>\n        </label>\n        \n        ${this.usageLimits?`\n        <div class="reply-guy-usage-stats">\n          <div class="reply-guy-usage-item">\n            <span>Replies:</span>\n            <span class="reply-guy-usage-value">${(this.usageLimits.repliesTotal||0)-(this.usageLimits.repliesRemaining||0)} / ${this.usageLimits.repliesTotal||0}</span>\n          </div>\n          ${void 0!==this.usageLimits.dailyCount?`\n          <div class="reply-guy-usage-item">\n            <span>Daily Goal:</span>\n            <span class="reply-guy-usage-value">${this.usageLimits.dailyCount||0} / ${this.usageLimits.dailyGoal||10}</span>\n          </div>\n          `:""}\n        </div>\n        `:""}\n      </div>\n    `;const t=this.container.getBoundingClientRect();this.overlay.style.position="fixed";const o=.8*window.innerHeight;window.innerHeight-t.bottom-16<o&&t.top>o?(this.overlay.style.bottom=window.innerHeight-t.top+8+"px",this.overlay.style.top="auto"):this.overlay.style.top=`${Math.min(t.bottom+8,window.innerHeight-o)}px`,this.overlay.style.left=`${Math.min(t.left,window.innerWidth-500)}px`,this.overlay.style.width="480px",this.attachEventListeners(n),setTimeout(()=>{document.addEventListener("click",this.handleOutsideClick)},0),document.body.appendChild(this.overlay)}attachEventListeners(e){if(!this.overlay)return;this.overlay.querySelector(".reply-guy-close")?.addEventListener("click",()=>this.remove());const n=this.overlay.querySelector("#reply-guy-response-type");n&&(n.value=this.responseType,n.addEventListener("change",()=>{this.responseType=n.value,console.log("[ReplyGuy] Response type changed to:",this.responseType)}));const t=this.overlay.querySelector("#reply-guy-tone");t&&(t.value=this.tone,t.addEventListener("change",()=>{this.tone=t.value,console.log("[ReplyGuy] Tone changed to:",this.tone)}));const o=this.overlay.querySelector("#reply-guy-idea"),i=this.overlay.querySelector("#idea-char-count");if(this.overlay.querySelector("#idea-char-limit"),o&&i){const e=this.userPlan?.max_response_idea_length||200,n=()=>{const n=o.value.length;i.textContent=n.toString(),o.classList.toggle("error",n>e)};o.addEventListener("input",()=>{this.responseIdea=o.value,n()}),n()}this.overlay.querySelector("#reply-guy-suggest")?.addEventListener("click",async e=>{if(e.preventDefault(),e.stopPropagation(),console.log("[ReplyGuy] Suggest button clicked"),!this.tweet.trim())return void alert("Please wait for tweet to load");const n=this.overlay?.querySelector("#reply-guy-suggest");if(!n||n.disabled)return;n.disabled=!0;const t=n.innerHTML;n.innerHTML='<svg class="reply-guy-spinner-small" width="14" height="14" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none" stroke-dasharray="31.4" stroke-dashoffset="10"></circle></svg> Suggesting...';try{if(!chrome.runtime?.id)throw new Error("Extension context invalidated");const e=await chrome.runtime.sendMessage({action:"getSuggestions",data:{tweet:this.tweet,responseType:this.responseType,tone:this.tone}});if(e&&e.success&&e.data?.suggestion)this.responseIdea=e.data.suggestion,o&&(o.value=this.responseIdea,o.dispatchEvent(new Event("input")));else{const n=e?.error||"Failed to get suggestion";console.error("[ReplyGuy] Failed to get suggestion:",n),n.includes("limit")?alert("You have reached your suggestion limit. Please upgrade your plan."):alert("Failed to generate suggestion. Please try again.")}}catch(e){console.error("[ReplyGuy] Suggest error:",e),e instanceof Error&&e.message.includes("Extension context invalidated")?alert("Reply Guy extension needs to be refreshed. Please reload this page."):alert("An error occurred. Please try again.")}finally{n&&this.overlay&&(n.disabled=!1,n.innerHTML=t)}});const r=this.overlay.querySelector("#reply-guy-length");r&&(r.value=this.replyLength,r.addEventListener("change",()=>{this.replyLength=r.value,console.log("[ReplyGuy] Reply length changed to:",this.replyLength)}));const l=this.overlay.querySelector("#reply-guy-research"),s=this.overlay.querySelector("#reply-guy-research-section"),a=this.overlay.querySelector("#reply-guy-perplexity");l&&(l.checked=this.needsResearch,s&&(s.style.display=this.needsResearch?"block":"none"),l.addEventListener("change",()=>{this.needsResearch=l.checked,s&&(s.style.display=this.needsResearch?"block":"none")})),a?.addEventListener("input",()=>{this.perplexityGuidance=a.value}),this.overlay.querySelector("#reply-guy-suggest-research")?.addEventListener("click",async e=>{if(e.preventDefault(),e.stopPropagation(),!this.tweet.trim()||!this.responseIdea.trim())return void alert("Please enter a tweet and response idea first");const n=this.overlay?.querySelector("#reply-guy-suggest-research");n&&(n.disabled=!0,n.innerHTML='<svg class="reply-guy-spinner-small" width="14" height="14" viewBox="0 0 24 24"><circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4" fill="none" stroke-dasharray="31.4" stroke-dashoffset="10"></circle></svg> Suggesting...');try{if(!chrome.runtime?.id)throw new Error("Extension context invalidated");const e=await chrome.runtime.sendMessage({action:"getSuggestResearch",data:{originalTweet:this.tweet,responseIdea:this.responseIdea,responseType:this.responseType,tone:this.tone}});e.success&&e.data?.suggestions&&(this.researchSuggestions=e.data.suggestions,this.showResearchSuggestions())}catch(e){console.error("[ReplyGuy] Research suggest error:",e),e instanceof Error&&e.message.includes("Extension context invalidated")&&alert("Reply Guy extension needs to be refreshed. Please reload this page.")}finally{n&&(n.disabled=!1,n.innerHTML='<svg width="14" height="14" viewBox="0 0 24 24" fill="none"><path d="M12 2L13.09 8.26L19 7L15.45 11.82L21 16L14.5 16.5L15 23L10.18 17.45L5 21L5.5 14.5L0 16L5.55 11.18L2 7L7.91 8.26L9 2L12 2Z" fill="currentColor"/></svg> Suggest')}});const c=this.overlay.querySelector("#reply-guy-meme"),p=this.overlay.querySelector("#reply-guy-meme-options"),y=this.overlay.querySelector("#reply-guy-meme-text"),d=this.overlay.querySelector("#reply-guy-meme-mode-section"),u=this.overlay.querySelector("#meme-info-empty"),g=this.overlay.querySelector("#meme-info-exact"),h=this.overlay.querySelector("#meme-info-enhance"),m=this.overlay.querySelector("#meme-preview-text");if(c&&this.userPlan){const e=this.userPlan.memes_used<this.userPlan.meme_limit;if(c.disabled=!e,e)c.checked=this.includeMeme,p&&(p.style.display=this.includeMeme?"block":"none");else{const e=c.parentElement;e&&(e.style.opacity="0.5",e.style.cursor="not-allowed")}}c?.addEventListener("change",()=>{this.includeMeme=c.checked,p&&(p.style.display=this.includeMeme?"block":"none"),this.includeMeme||(this.memeText="",y&&(y.value=""))});const f=()=>{const e=this.memeText.trim().length>0;if(d&&(d.style.display=e?"block":"none"),e){m&&(m.textContent=this.memeText);const e="exact"===this.memeTextMode;u&&(u.style.display="none"),g&&(g.style.display=e?"block":"none"),h&&(h.style.display=e?"none":"block")}else u&&(u.style.display="block"),g&&(g.style.display="none"),h&&(h.style.display="none")};y?.addEventListener("input",()=>{this.memeText=y.value,f()}),this.overlay.querySelectorAll('input[name="memeTextMode"]').forEach(e=>{e.addEventListener("change",e=>{this.memeTextMode=e.target.value,f()})});const x=this.overlay.querySelector("#reply-guy-write-like-me");x?(x.checked=this.useCustomStyle||!1,console.log("[ReplyGuy] Write Like Me initial state:",this.useCustomStyle),x.addEventListener("change",()=>{this.useCustomStyle=x.checked,console.log("[ReplyGuy] Write Like Me changed to:",this.useCustomStyle)})):(this.useCustomStyle=!1,console.log("[ReplyGuy] Write Like Me feature not available in user plan"));const v=this.overlay.querySelector("#reply-guy-match-style");v?(v.checked=!1!==this.enableStyleMatching,this.enableStyleMatching=v.checked,console.log("[ReplyGuy] Match Tweet Style initial state:",this.enableStyleMatching),v.addEventListener("change",()=>{this.enableStyleMatching=v.checked,console.log("[ReplyGuy] Match Tweet Style changed to:",this.enableStyleMatching)})):(this.enableStyleMatching=!1,console.log("[ReplyGuy] Match Tweet Style feature not available in user plan")),this.overlay.querySelector("#reply-guy-generate")?.addEventListener("click",async()=>{if(!this.responseIdea.trim())return void alert("Please describe what you want to say");const n=this.userPlan?.max_tweet_length||280,t={originalTweet:this.tweet.length>n?this.tweet.substring(0,n)+"...":this.tweet,responseIdea:this.responseIdea,responseType:this.responseType,tone:this.tone,replyLength:this.replyLength,needsResearch:this.needsResearch,includeMeme:this.includeMeme,useCustomStyle:this.useCustomStyle||!1,enableStyleMatching:this.enableStyleMatching||!1};if(this.needsResearch&&this.perplexityGuidance&&(t.perplexityGuidance=this.perplexityGuidance),this.includeMeme&&this.memeText&&(t.memeText=this.memeText,t.memeTextMode=this.memeTextMode),chrome?.runtime?.id)try{const e=await chrome.runtime.sendMessage({action:"checkAuth"});e?.success&&e.data?.user?.id&&(t.userId=e.data.user.id)}catch(e){console.error("[ReplyGuy] Failed to get user ID:",e)}console.log("[ReplyGuy] ===== VALIDATION DEBUG ====="),console.log("[ReplyGuy] originalTweet:",t.originalTweet,"type:",typeof t.originalTweet,"length:",t.originalTweet?.length),console.log("[ReplyGuy] responseIdea:",t.responseIdea,"type:",typeof t.responseIdea,"length:",t.responseIdea?.length),console.log("[ReplyGuy] responseType:",t.responseType,"type:",typeof t.responseType),console.log("[ReplyGuy] tone:",t.tone,"type:",typeof t.tone),console.log("[ReplyGuy] needsResearch:",t.needsResearch,"type:",typeof t.needsResearch),console.log("[ReplyGuy] replyLength:",t.replyLength,"type:",typeof t.replyLength),console.log("[ReplyGuy] includeMeme:",t.includeMeme,"type:",typeof t.includeMeme),console.log("[ReplyGuy] useCustomStyle:",t.useCustomStyle,"type:",typeof t.useCustomStyle),console.log("[ReplyGuy] enableStyleMatching:",t.enableStyleMatching,"type:",typeof t.enableStyleMatching),console.log("[ReplyGuy] perplexityGuidance:",t.perplexityGuidance,"type:",typeof t.perplexityGuidance),console.log("[ReplyGuy] memeText:",t.memeText,"type:",typeof t.memeText),console.log("[ReplyGuy] memeTextMode:",t.memeTextMode,"type:",typeof t.memeTextMode),console.log("[ReplyGuy] userId:",t.userId,"type:",typeof t.userId),console.log("[ReplyGuy] Full data object:",JSON.stringify(t,null,2)),console.log("[ReplyGuy] ===== END VALIDATION DEBUG =====");const o=this.overlay?.querySelector("#reply-guy-save-defaults");o?.checked&&this.saveUserSettings(),e(t)})}getComprehensiveStyles(){return'\n      .reply-guy-overlay {\n        position: fixed;\n        z-index: 10000;\n        background: white;\n        border-radius: 16px;\n        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.12);\n        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;\n        overflow: hidden;\n        animation: slideIn 0.3s ease-out;\n        display: flex;\n        flex-direction: column;\n        max-height: 80vh; /* Limit to 80% of viewport height */\n      }\n\n      @keyframes slideIn {\n        from {\n          opacity: 0;\n          transform: translateY(-20px);\n        }\n        to {\n          opacity: 1;\n          transform: translateY(0);\n        }\n      }\n\n      .reply-guy-header {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 16px 20px;\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        color: white;\n        flex-shrink: 0; /* Prevent header from shrinking */\n      }\n\n      .reply-guy-title {\n        display: flex;\n        align-items: center;\n        font-size: 18px;\n        font-weight: 600;\n        gap: 10px;\n      }\n      \n      .reply-guy-logo-icon {\n        width: 28px;\n        height: 28px;\n        filter: brightness(0) invert(1);\n      }\n\n      .reply-guy-close {\n        width: 32px;\n        height: 32px;\n        border: none;\n        background: rgba(255, 255, 255, 0.2);\n        color: white;\n        border-radius: 8px;\n        cursor: pointer;\n        font-size: 24px;\n        line-height: 1;\n        transition: all 0.2s;\n      }\n\n      .reply-guy-close:hover {\n        background: rgba(255, 255, 255, 0.3);\n        transform: scale(1.05);\n      }\n      \n      .reply-guy-content {\n        padding: 20px;\n        overflow-y: auto;\n        flex: 1;\n        max-height: calc(80vh - 80px); /* Account for header height */\n      }\n      \n      /* V4 Compact Design Grid Styles */\n      .reply-guy-grid-3-col {\n        display: grid;\n        grid-template-columns: repeat(3, 1fr);\n        gap: 12px;\n        margin-bottom: 16px;\n      }\n      \n      .reply-guy-features-grid {\n        display: grid;\n        grid-template-columns: repeat(2, 1fr);\n        gap: 10px;\n        margin-bottom: 16px;\n      }\n      \n      .reply-guy-footer {\n        padding: 16px 20px;\n        border-top: 1px solid #e9ecef;\n        background: #f8f9fa;\n        flex-shrink: 0;\n      }\n      \n      .reply-guy-usage-stats {\n        display: flex;\n        justify-content: space-between;\n        margin-top: 12px;\n        font-size: 13px;\n        color: #6c757d;\n      }\n      \n      .reply-guy-usage-item {\n        display: flex;\n        align-items: center;\n        gap: 4px;\n      }\n      \n      .reply-guy-usage-value {\n        font-weight: 600;\n        color: #495057;\n      }\n      \n      .reply-guy-save-defaults-checkbox {\n        margin-top: 12px;\n      }\n      \n      .reply-guy-content-scroll {\n        overflow-y: auto;\n        flex: 1;\n        padding: 20px;\n        min-height: 0;\n        max-height: calc(80vh - 180px); /* Account for header and footer */\n      }\n      \n      /* Tweet Preview Section */\n      \n      .reply-guy-tweet-preview {\n        padding: 16px;\n        font-size: 14px;\n        line-height: 1.5;\n        color: #6c757d;\n        max-height: 150px;\n        overflow-y: auto;\n      }\n      \n      .reply-guy-row {\n        display: flex;\n        gap: 12px;\n        margin-bottom: 20px;\n      }\n      \n      .reply-guy-half {\n        flex: 1;\n      }\n      \n      .reply-guy-select {\n        width: 100%;\n        padding: 8px 10px;\n        border: 2px solid #e9ecef;\n        border-radius: 8px;\n        font-size: 13px;\n        color: #212529; /* Explicitly set text color */\n        transition: all 0.2s;\n        font-family: inherit;\n        background: white;\n        cursor: pointer;\n        -webkit-appearance: none; /* Remove default styling */\n      }\n      \n      .reply-guy-select option {\n        color: #212529; /* Ensure option text is visible */\n        background: white;\n      }\n      \n      .reply-guy-select:focus {\n        outline: none;\n        border-color: #667eea;\n        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n      }\n      \n      .reply-guy-main-section {\n        margin-bottom: 16px;\n      }\n      \n      /* Form Elements */\n      .reply-guy-option-group {\n        margin-bottom: 12px;\n      }\n      \n      /* Compact spacing for grid items */\n      .reply-guy-grid-3-col .reply-guy-option-group,\n      .reply-guy-features-grid .reply-guy-option-group {\n        margin-bottom: 0;\n      }\n      \n      .reply-guy-option-label {\n        display: block;\n        font-size: 12px;\n        font-weight: 600;\n        color: #6c757d;\n        text-transform: uppercase;\n        margin-bottom: 8px;\n        letter-spacing: 0.5px;\n      }\n      \n      .reply-guy-label-with-action {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 8px;\n      }\n      \n      \n      .reply-guy-text-input,\n      .reply-guy-idea-input {\n        width: 100%;\n        padding: 10px 12px;\n        border: 2px solid #e9ecef;\n        border-radius: 8px;\n        font-size: 14px;\n        transition: all 0.2s;\n        font-family: inherit;\n      }\n      \n      .reply-guy-text-input:focus,\n      .reply-guy-idea-input:focus {\n        outline: none;\n        border-color: #667eea;\n        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);\n      }\n      \n      .reply-guy-idea-input {\n        resize: vertical;\n        min-height: 60px;\n      }\n      \n      .reply-guy-idea-input.error {\n        border-color: #dc3545;\n      }\n      \n      .reply-guy-char-count {\n        text-align: right;\n        font-size: 12px;\n        color: #6c757d;\n        margin-top: 4px;\n      }\n      \n      .reply-guy-suggest-btn {\n        display: flex;\n        align-items: center;\n        gap: 4px;\n        padding: 4px 12px;\n        background: #f8f9fa;\n        border: 1px solid #e9ecef;\n        border-radius: 6px;\n        font-size: 12px;\n        color: #667eea;\n        cursor: pointer;\n        transition: all 0.2s;\n      }\n      \n      .reply-guy-suggest-btn:hover {\n        background: #e9ecef;\n        border-color: #667eea;\n      }\n      \n      /* Radio and Checkbox */\n      .reply-guy-length-options,\n      .reply-guy-meme-mode {\n        display: flex;\n        gap: 12px;\n        flex-wrap: wrap;\n      }\n      \n      .reply-guy-radio,\n      .reply-guy-checkbox {\n        display: flex;\n        align-items: center;\n        gap: 6px;\n        cursor: pointer;\n        font-size: 14px;\n        color: #495057;\n      }\n      \n      .reply-guy-radio input[type="radio"],\n      .reply-guy-checkbox input[type="checkbox"] {\n        cursor: pointer;\n      }\n      \n      .reply-guy-radio input[type="radio"]:disabled + span,\n      .reply-guy-checkbox input[type="checkbox"]:disabled + span {\n        opacity: 0.5;\n        cursor: not-allowed;\n      }\n      \n      .reply-guy-option-hint {\n        font-size: 11px;\n        color: #868e96;\n        margin-top: 4px;\n        margin-left: 24px;\n      }\n      \n      /* Save Defaults */\n      .reply-guy-save-defaults {\n        margin: 16px 0;\n        padding: 12px 16px;\n        background: #f8f9fa;\n        border-radius: 8px;\n      }\n      \n      .reply-guy-checkbox {\n        display: flex;\n        align-items: center;\n        cursor: pointer;\n        font-size: 14px;\n        color: #495057;\n      }\n      \n      .reply-guy-checkbox input {\n        margin-right: 8px;\n      }\n      \n      /* Action Buttons */\n      .reply-guy-actions {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-top: 24px;\n        padding-top: 20px;\n        border-top: 1px solid #e9ecef;\n      }\n      \n      .reply-guy-generate-btn {\n        width: 100%;\n        padding: 14px 24px;\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        color: white;\n        border: none;\n        border-radius: 10px;\n        font-size: 16px;\n        font-weight: 600;\n        cursor: pointer;\n        transition: all 0.3s;\n        box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n      }\n      \n      .reply-guy-generate-btn:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);\n      }\n      \n      .reply-guy-generate-btn:active {\n        transform: translateY(0);\n      }\n      \n      .reply-guy-usage {\n        margin-left: 16px;\n        font-size: 13px;\n        color: #6c757d;\n        white-space: nowrap;\n        display: flex;\n        flex-direction: column;\n        align-items: flex-end;\n        gap: 2px;\n      }\n      \n      .reply-guy-usage-remaining {\n        font-weight: 600;\n        color: #495057;\n      }\n      \n      .reply-guy-usage-detail {\n        font-size: 11px;\n        color: #adb5bd;\n      }\n      \n      .reply-guy-daily-goal {\n        display: flex;\n        align-items: center;\n        gap: 6px;\n        margin-top: 8px;\n        padding: 8px 12px;\n        background: #f8f9fa;\n        border-radius: 8px;\n        font-size: 13px;\n        color: #495057;\n      }\n      \n      .reply-guy-daily-icon {\n        font-size: 16px;\n      }\n      \n      .reply-guy-daily-text {\n        font-weight: 500;\n      }\n      \n      /* Research suggestions */\n      .reply-guy-suggestion-label {\n        font-size: 12px;\n        font-weight: 600;\n        color: #6c757d;\n        margin-bottom: 6px;\n      }\n      \n      .reply-guy-suggestion-chips {\n        display: flex;\n        flex-wrap: wrap;\n        gap: 6px;\n      }\n      \n      .reply-guy-suggestion-chip {\n        padding: 6px 12px;\n        background: #f8f9fa;\n        border: 1px solid #e9ecef;\n        border-radius: 16px;\n        font-size: 12px;\n        color: #495057;\n        cursor: pointer;\n        transition: all 0.2s;\n      }\n      \n      .reply-guy-suggestion-chip:hover {\n        background: #e9ecef;\n        border-color: #667eea;\n        color: #667eea;\n      }\n      \n      /* Meme styles */\n      .reply-guy-meme-usage {\n        font-size: 11px;\n        color: #6c757d;\n        margin-left: 8px;\n      }\n      \n      .reply-guy-meme-info {\n        margin-top: 8px;\n        padding: 8px;\n        background: #f8f9fa;\n        border-radius: 6px;\n        font-size: 12px;\n        color: #495057;\n      }\n      \n      .reply-guy-meme-info p {\n        margin: 0;\n      }\n      \n      .reply-guy-meme-info strong {\n        font-weight: 600;\n      }\n      \n      /* Responsive adjustments for smaller overlays */\n      @media (max-width: 480px) {\n        .reply-guy-grid-3-col {\n          grid-template-columns: 1fr;\n          gap: 8px;\n        }\n        \n        .reply-guy-features-grid {\n          grid-template-columns: 1fr;\n          gap: 8px;\n        }\n        \n        .reply-guy-usage-stats {\n          flex-direction: column;\n          gap: 8px;\n        }\n      }\n      \n      /* Spinner for loading */\n      .reply-guy-spinner-small {\n        animation: spin 1s linear infinite;\n        display: inline-block;\n        vertical-align: middle;\n      }\n      \n      /* Loading States */\n      .reply-guy-loading {\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        justify-content: center;\n        padding: 60px;\n        gap: 16px;\n      }\n      \n      .reply-guy-loading img {\n        animation: pulse 2s ease-in-out infinite;\n      }\n      \n      @keyframes pulse {\n        0%, 100% {\n          transform: scale(1);\n          opacity: 1;\n        }\n        50% {\n          transform: scale(1.05);\n          opacity: 0.8;\n        }\n      }\n      \n      .reply-guy-spinner {\n        width: 40px;\n        height: 40px;\n        border: 3px solid #f3f3f3;\n        border-top: 3px solid #667eea;\n        border-radius: 50%;\n        animation: spin 1s linear infinite;\n      }\n      \n      @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }\n      \n      /* Loading dots animation */\n      .reply-guy-loading-text {\n        color: #666;\n        font-size: 16px;\n        display: flex;\n        align-items: center;\n        gap: 4px;\n      }\n      \n      .reply-guy-loading-dots {\n        display: inline-flex;\n        gap: 3px;\n      }\n      \n      .reply-guy-loading-dot {\n        width: 6px;\n        height: 6px;\n        background: #667eea;\n        border-radius: 50%;\n        display: inline-block;\n        animation: loadingDot 1.4s infinite ease-in-out both;\n      }\n      \n      .reply-guy-loading-dot:nth-child(1) {\n        animation-delay: -0.32s;\n      }\n      \n      .reply-guy-loading-dot:nth-child(2) {\n        animation-delay: -0.16s;\n      }\n      \n      @keyframes loadingDot {\n        0%, 80%, 100% {\n          transform: scale(0.8);\n          opacity: 0.5;\n        }\n        40% {\n          transform: scale(1.2);\n          opacity: 1;\n        }\n      }\n      \n      /* Error State */\n      .reply-guy-error {\n        padding: 20px;\n        text-align: center;\n        color: #dc3545;\n        background: #f8d7da;\n        border: 1px solid #f5c6cb;\n        border-radius: 8px;\n        margin: 16px;\n      }\n    '}showGeneratedReply(e,n,t){this.remove(),this.currentReplyData={...t||{},replyLength:this.replyLength},this.overlay=document.createElement("div"),this.overlay.className="reply-guy-overlay",this.overlay.innerHTML=`\n      <style>\n        ${this.getComprehensiveStyles()}\n        /* Override to ensure proper flex layout for result display */\n        .reply-guy-overlay {\n          display: flex !important;\n          flex-direction: column !important;\n          max-height: 80vh !important;\n        }\n        .reply-guy-content-scroll {\n          overflow-y: auto;\n          flex: 1;\n          padding: 20px;\n          min-height: 0; /* Important for Firefox */\n        }\n        .reply-guy-reply-text {\n          background: #f8f9fa;\n          border: 2px solid #e9ecef;\n          border-radius: 12px;\n          padding: 16px;\n          font-size: 15px;\n          line-height: 1.5;\n          color: #212529;\n          margin-bottom: 16px;\n        }\n        .reply-guy-meme-preview {\n          margin-bottom: 16px;\n          text-align: center;\n        }\n        .reply-guy-meme-preview img {\n          width: 100%;\n          max-width: 300px;\n          max-height: 300px;\n          height: auto;\n          object-fit: contain;\n          border-radius: 12px;\n          box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n        }\n        .reply-guy-result-footer {\n          flex-shrink: 0;\n          padding: 0 20px 20px;\n          border-top: 1px solid #e9ecef;\n          background: white;\n        }\n        .reply-guy-result-actions {\n          display: flex;\n          gap: 12px;\n          padding-top: 16px;\n          justify-content: center;\n        }\n        .reply-guy-copy-btn, .reply-guy-edit-btn {\n          padding: 14px 24px;\n          border: none;\n          border-radius: 10px;\n          font-size: 15px;\n          font-weight: 600;\n          cursor: pointer;\n          transition: all 0.2s;\n          min-width: 140px;\n        }\n        .reply-guy-copy-btn {\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n        }\n        .reply-guy-copy-btn:hover {\n          transform: translateY(-1px);\n          box-shadow: 0 6px 16px rgba(102, 126, 234, 0.4);\n        }\n        .reply-guy-copy-btn.copied {\n          background: linear-gradient(135deg, #28a745 0%, #20c997 100%);\n        }\n        .reply-guy-edit-btn {\n          background: white;\n          color: #667eea;\n          border: 2px solid #667eea;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n        }\n        .reply-guy-edit-btn:hover {\n          background: #f8f9ff;\n          transform: translateY(-1px);\n          box-shadow: 0 4px 12px rgba(102, 126, 234, 0.2);\n        }\n        .reply-guy-notice {\n          margin-top: 12px;\n          padding: 12px 16px;\n          border-radius: 8px;\n          font-size: 14px;\n          text-align: center;\n        }\n        .reply-guy-copy-notice {\n          background: #d4edda;\n          border: 1px solid #c3e6cb;\n          color: #155724;\n        }\n        .reply-guy-meme-notice {\n          background: #d1ecf1;\n          border: 1px solid #bee5eb;\n          color: #0c5460;\n        }\n      </style>\n      <div class="reply-guy-header">\n        <div class="reply-guy-title">\n          <img src="${chrome.runtime.getURL("icons/reply_guy_logo.png")}" class="reply-guy-logo-icon" alt="Reply Guy" />\n          <span>Your Reply is Ready!</span>\n        </div>\n        <button class="reply-guy-close" aria-label="Close">×</button>\n      </div>\n      \n      <div class="reply-guy-content-scroll">\n        <div class="reply-guy-reply-text">\n          ${this.escapeHtml(e)}\n        </div>\n        \n        ${n?`\n        <div class="reply-guy-meme-preview">\n          <img src="${n}" alt="Generated meme" />\n        </div>\n        `:""}\n      </div>\n      \n      <div class="reply-guy-result-footer">\n        <div class="reply-guy-result-actions">\n          <button class="reply-guy-copy-btn">${n?"📋 Copy & Download":"📋 Copy Reply"}</button>\n          <button class="reply-guy-edit-btn">✏️ Edit</button>\n        </div>\n        \n        <div class="reply-guy-copy-notice reply-guy-notice" style="display: none;">\n          ✅ Reply copied! Click in the reply box and paste with <strong>Ctrl+V</strong> (or <strong>Cmd+V</strong> on Mac)\n        </div>\n        \n        ${n?'\n        <div class="reply-guy-meme-notice reply-guy-notice" style="display: none;">\n          🖼️ Meme will open in a new window\n        </div>\n        ':""}\n      </div>\n    `;const o=this.container.getBoundingClientRect();this.overlay.style.position="fixed";const i=.8*window.innerHeight;window.innerHeight-o.bottom-16<i&&o.top>i?(this.overlay.style.bottom=window.innerHeight-o.top+8+"px",this.overlay.style.top="auto"):this.overlay.style.top=`${Math.min(o.bottom+8,window.innerHeight-i)}px`,this.overlay.style.left=`${Math.min(o.left,window.innerWidth-500)}px`,this.overlay.style.width="480px",this.overlay.querySelector(".reply-guy-close")?.addEventListener("click",()=>this.remove());const r=this.overlay.querySelector(".reply-guy-copy-btn"),l=this.overlay.querySelector(".reply-guy-edit-btn"),s=this.overlay.querySelector(".reply-guy-copy-notice");r?.addEventListener("click",async()=>{try{await navigator.clipboard.writeText(e),r.textContent="✅ Copied!",r.classList.add("copied"),s&&(s.style.display="block");try{const e=await chrome.runtime.sendMessage({action:"getUsageLimits"});if(e.success&&e.data){const{dailyCount:n,dailyGoal:t}=e.data;if(void 0!==n&&void 0!==t&&n>=t){const e=`celebration_shown_${(new Date).toDateString()}`;chrome.storage.local.get(e,n=>{n[e]||(chrome.runtime.sendMessage({action:"triggerPopupCelebration"}),chrome.storage.local.set({[e]:!0}))})}}}catch(e){console.error("[ReplyGuy] Failed to check celebration status:",e)}if(n)try{if(window.open(n,"_blank","width=600,height=600,toolbar=no,menubar=no,location=no,status=no")){const e=this.overlay?.querySelector(".reply-guy-meme-notice");e&&(e.innerHTML="🖼️ Meme opened in new window! Right-click the image and save it, then drag into X or use the photo button",e.style.display="block"),console.log("[ReplyGuy] Meme opened in new window"),setTimeout(()=>{window.focus()},100)}else{window.open(n,"_blank");const e=this.overlay?.querySelector(".reply-guy-meme-notice");e&&(e.innerHTML="🖼️ Meme opened in new tab! Right-click to save it, then return here to paste your reply",e.style.display="block"),console.log("[ReplyGuy] Meme opened in new tab (popup blocked)")}}catch(e){console.error("[ReplyGuy] Failed to open meme in new window:",e);const t=this.overlay?.querySelector(".reply-guy-meme-notice");t&&(t.innerHTML=`🖼️ <a href="${n}" target="_blank" style="color: #0c5460; text-decoration: underline;">Click here to open meme</a> - then right-click to save`,t.style.display="block")}const t=document.querySelector('[data-testid="tweetTextarea_0"]')||document.querySelector('[role="textbox"][contenteditable="true"]')||this.container.querySelector('[role="textbox"]');t&&t.focus(),setTimeout(()=>{this.remove()},1500)}catch(e){console.error("[ReplyGuy] Failed to copy to clipboard:",e),alert("Failed to copy. Please select the text and copy manually.")}}),l?.addEventListener("click",()=>{this.showEditMode(e)}),setTimeout(()=>{document.addEventListener("click",this.handleOutsideClick)},0),document.body.appendChild(this.overlay)}showEditMode(e){this.remove();const n=this.currentReplyData?.replyLength||this.replyLength||"short",t=this.getReplyLengthLimit(n);this.overlay=document.createElement("div"),this.overlay.className="reply-guy-overlay",this.overlay.innerHTML=`\n      <style>\n        ${this.getComprehensiveStyles()}\n        /* Edit mode specific styles */\n        .reply-guy-edit-container {\n          padding: 20px;\n        }\n        .reply-guy-edit-section {\n          margin-bottom: 20px;\n        }\n        .reply-guy-edit-label {\n          display: block;\n          font-size: 14px;\n          font-weight: 600;\n          color: #536471;\n          margin-bottom: 8px;\n        }\n        .reply-guy-context-box {\n          background: #f7f9fa;\n          border: 1px solid #e1e8ed;\n          border-radius: 8px;\n          padding: 12px;\n          font-size: 14px;\n          color: #536471;\n          margin-bottom: 8px;\n        }\n        .reply-guy-edit-textarea {\n          width: 100%;\n          padding: 12px;\n          border: 2px solid #e1e8ed;\n          border-radius: 8px;\n          font-size: 15px;\n          line-height: 1.5;\n          resize: vertical;\n          min-height: 100px;\n          font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;\n          transition: border-color 0.2s;\n        }\n        .reply-guy-edit-textarea:focus {\n          outline: none;\n          border-color: #667eea;\n        }\n        .reply-guy-edit-input {\n          width: 100%;\n          padding: 10px 12px;\n          border: 2px solid #e1e8ed;\n          border-radius: 8px;\n          font-size: 14px;\n          transition: border-color 0.2s;\n        }\n        .reply-guy-edit-input:focus {\n          outline: none;\n          border-color: #667eea;\n        }\n        .reply-guy-char-count {\n          text-align: right;\n          font-size: 13px;\n          color: #536471;\n          margin-top: 4px;\n        }\n        .reply-guy-edit-actions {\n          display: flex;\n          gap: 12px;\n          justify-content: flex-end;\n          margin-top: 20px;\n        }\n        .reply-guy-save-btn {\n          padding: 10px 24px;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          color: white;\n          border: none;\n          border-radius: 8px;\n          font-size: 15px;\n          font-weight: 600;\n          cursor: pointer;\n          transition: all 0.2s;\n        }\n        .reply-guy-save-btn:hover:not(:disabled) {\n          transform: translateY(-1px);\n          box-shadow: 0 4px 12px rgba(102, 126, 234, 0.3);\n        }\n        .reply-guy-save-btn:disabled {\n          opacity: 0.6;\n          cursor: not-allowed;\n        }\n        .reply-guy-cancel-btn {\n          padding: 10px 24px;\n          background: white;\n          color: #536471;\n          border: 2px solid #e1e8ed;\n          border-radius: 8px;\n          font-size: 15px;\n          font-weight: 600;\n          cursor: pointer;\n          transition: all 0.2s;\n        }\n        .reply-guy-cancel-btn:hover {\n          background: #f7f9fa;\n          border-color: #d1d5da;\n        }\n      </style>\n      <div class="reply-guy-header">\n        <div class="reply-guy-title">\n          <img src="${chrome.runtime.getURL("icons/reply_guy_logo.png")}" class="reply-guy-logo-icon" alt="Reply Guy" />\n          <span>Improve Your Writing Style</span>\n        </div>\n        <button class="reply-guy-close" aria-label="Close">×</button>\n      </div>\n      \n      <div class="reply-guy-edit-container">\n        <div class="reply-guy-edit-section" style="background: #f0f7ff; padding: 12px; border-radius: 8px; margin-bottom: 16px;">\n          <p style="margin: 0; font-size: 14px; color: #536471; line-height: 1.5;">\n            Edit the reply to match how YOU would write it. When you save, your edited reply will be <strong>automatically copied</strong> to the clipboard and your feedback will help improve your writing style.\n          </p>\n        </div>\n        \n        <div class="reply-guy-edit-section">\n          <label class="reply-guy-edit-label">Original Tweet</label>\n          <div class="reply-guy-context-box">\n            ${this.escapeHtml(this.originalTweet||"Tweet content not available")}\n          </div>\n        </div>\n        \n        <div class="reply-guy-edit-section">\n          <label class="reply-guy-edit-label">Your Idea</label>\n          <div class="reply-guy-context-box">\n            ${this.escapeHtml(this.responseIdea||"Response idea not available")}\n          </div>\n        </div>\n        \n        <div class="reply-guy-edit-section">\n          <label class="reply-guy-edit-label" for="reply-guy-edited-reply">\n            ✨ Edit to match your style\n          </label>\n          <textarea \n            id="reply-guy-edited-reply" \n            class="reply-guy-edit-textarea"\n            placeholder="Edit this to match how YOU would write it"\n            maxlength="${t}"\n          >${this.escapeHtml(e)}</textarea>\n          <div class="reply-guy-char-count">\n            <span id="reply-guy-char-current">${e.length}</span>/${t} characters\n          </div>\n        </div>\n        \n        <div class="reply-guy-edit-section">\n          <label class="reply-guy-edit-label" for="reply-guy-correction-notes">\n            What did we get wrong? (Optional)\n          </label>\n          <input \n            type="text"\n            id="reply-guy-correction-notes" \n            class="reply-guy-edit-input"\n            placeholder="e.g., 'Too formal' or 'I never use exclamation marks'"\n          />\n        </div>\n        \n        <div class="reply-guy-edit-actions">\n          <button class="reply-guy-cancel-btn">Cancel</button>\n          <button class="reply-guy-save-btn" id="reply-guy-save-edit">Save & Copy Edited Reply</button>\n        </div>\n      </div>\n    `,this.container.getBoundingClientRect(),this.overlay.style.position="fixed";const o=Math.min(.8*window.innerHeight,600);this.overlay.style.top="50%",this.overlay.style.left="50%",this.overlay.style.transform="translate(-50%, -50%)",this.overlay.style.width="520px",this.overlay.style.maxHeight=`${o}px`,this.overlay.style.overflowY="auto";const i=this.overlay.querySelector(".reply-guy-close"),r=this.overlay.querySelector(".reply-guy-cancel-btn"),l=this.overlay.querySelector("#reply-guy-save-edit"),s=this.overlay.querySelector("#reply-guy-edited-reply"),a=this.overlay.querySelector("#reply-guy-char-current"),c=this.overlay.querySelector("#reply-guy-correction-notes");i?.addEventListener("click",()=>this.remove()),r?.addEventListener("click",()=>this.remove()),s?.addEventListener("input",()=>{const n=s.value.length;a&&(a.textContent=n.toString()),l&&(l.disabled=s.value.trim()===e.trim())}),l?.addEventListener("click",async()=>{const n=s.value.trim(),t=c.value.trim();if(n!==e.trim()){l.disabled=!0,l.textContent="Saving...";try{const o=await chrome.runtime.sendMessage({action:"submitCorrection",data:{styleId:this.currentReplyData?.styleId||void 0,originalTweet:this.originalTweet||this.tweet,responseIdea:this.responseIdea,replyType:this.currentReplyData?.replyType||this.responseType,tone:this.currentReplyData?.tone||this.tone,generatedReply:e,correctedReply:n,correctionNotes:t}});if(!o.success)throw new Error(o.error||"Failed to save correction");try{await navigator.clipboard.writeText(n),l.textContent="✅ Saved & Copied!";const e=this.overlay?.querySelector(".reply-guy-edit-container");if(e){const n=document.createElement("div");n.className="reply-guy-copy-notice reply-guy-notice",n.style.marginTop="16px",n.innerHTML="✅ Your edited reply has been copied to clipboard and your feedback saved!<br><strong>Paste it with Ctrl+V (or Cmd+V on Mac)</strong>",e.appendChild(n)}setTimeout(()=>{this.remove()},1500)}catch(e){console.error("[ReplyGuy] Failed to copy to clipboard:",e),l.textContent="✅ Saved! (Copy manually)",s?.select(),setTimeout(()=>{this.remove()},3e3)}}catch(e){console.error("[ReplyGuy] Failed to save correction:",e),l.textContent="Failed - Try Again",l.disabled=!1,setTimeout(()=>{l.textContent="Save & Copy Edited Reply"},2e3)}}}),setTimeout(()=>{s?.focus(),s?.setSelectionRange(s.value.length,s.value.length)},100),document.body.appendChild(this.overlay)}show(e,n){this.remove(),this.overlay=document.createElement("div"),this.overlay.className="reply-guy-overlay",this.overlay.innerHTML=`\n      <style>\n        .reply-guy-overlay {\n          position: absolute;\n          z-index: 10000;\n          background: white;\n          border-radius: 12px;\n          box-shadow: 0 4px 24px rgba(0, 0, 0, 0.15);\n          padding: 16px;\n          max-width: 500px;\n          margin-top: 8px;\n          animation: slideIn 0.2s ease-out;\n        }\n\n        @keyframes slideIn {\n          from {\n            opacity: 0;\n            transform: translateY(-10px);\n          }\n          to {\n            opacity: 1;\n            transform: translateY(0);\n          }\n        }\n\n        .reply-guy-header {\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n          margin-bottom: 12px;\n          padding-bottom: 12px;\n          border-bottom: 1px solid #e9ecef;\n        }\n\n        .reply-guy-title {\n          display: flex;\n          align-items: center;\n          font-size: 16px;\n          font-weight: 600;\n          color: #1a1a1a;\n        }\n\n        .reply-guy-logo {\n          width: 20px;\n          height: 20px;\n          margin-right: 8px;\n          background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n          border-radius: 4px;\n        }\n\n        .reply-guy-close {\n          width: 24px;\n          height: 24px;\n          border: none;\n          background: none;\n          cursor: pointer;\n          color: #6c757d;\n          font-size: 20px;\n          line-height: 1;\n          transition: color 0.2s;\n        }\n\n        .reply-guy-close:hover {\n          color: #1a1a1a;\n        }\n\n        .reply-guy-suggestions {\n          display: flex;\n          flex-direction: column;\n          gap: 8px;\n        }\n\n        .reply-guy-suggestion {\n          padding: 12px;\n          background: #f8f9fa;\n          border: 1px solid #e9ecef;\n          border-radius: 8px;\n          cursor: pointer;\n          transition: all 0.2s;\n          font-size: 14px;\n          line-height: 1.5;\n          color: #1a1a1a;\n        }\n\n        .reply-guy-suggestion:hover {\n          background: #e9ecef;\n          border-color: #667eea;\n          transform: translateX(4px);\n        }\n\n        .reply-guy-loading {\n          text-align: center;\n          padding: 40px;\n          color: #6c757d;\n        }\n\n        .reply-guy-spinner {\n          width: 32px;\n          height: 32px;\n          border: 3px solid #f3f3f3;\n          border-top: 3px solid #667eea;\n          border-radius: 50%;\n          animation: spin 1s linear infinite;\n          margin: 0 auto 12px;\n        }\n\n        @keyframes spin {\n          0% { transform: rotate(0deg); }\n          100% { transform: rotate(360deg); }\n        }\n      </style>\n      <div class="reply-guy-header">\n        <div class="reply-guy-title">\n          <div class="reply-guy-logo"></div>\n          Reply Suggestions\n        </div>\n        <button class="reply-guy-close" aria-label="Close">×</button>\n      </div>\n      <div class="reply-guy-suggestions">\n        ${e.map((e,n)=>`\n          <div class="reply-guy-suggestion" data-index="${n}">\n            ${this.escapeHtml(e)}\n          </div>\n        `).join("")}\n      </div>\n    `;const t=this.container.getBoundingClientRect();this.overlay.style.position="fixed",this.overlay.style.top=`${t.bottom+window.scrollY}px`,this.overlay.style.left=`${t.left}px`,this.overlay.style.width=`${t.width}px`,this.overlay.querySelector(".reply-guy-close")?.addEventListener("click",()=>this.remove()),this.overlay.querySelectorAll(".reply-guy-suggestion").forEach(t=>{t.addEventListener("click",()=>{const o=parseInt(t.getAttribute("data-index")||"0");n(e[o]),this.remove()})}),setTimeout(()=>{document.addEventListener("click",this.handleOutsideClick)},0),document.body.appendChild(this.overlay)}showLoading(){this.remove(),this.overlay=document.createElement("div"),this.overlay.className="reply-guy-overlay",this.overlay.innerHTML=`\n      <style>\n        ${this.getComprehensiveStyles()}\n      </style>\n      <div class="reply-guy-header">\n        <div class="reply-guy-title">\n          <img src="${chrome.runtime.getURL("icons/reply_guy_logo.png")}" class="reply-guy-logo-icon" alt="Reply Guy" />\n          <span>Reply Guy</span>\n        </div>\n      </div>\n      <div class="reply-guy-loading">\n        <img src="${chrome.runtime.getURL("icons/reply_guy_logo.png")}" alt="Generating..." />\n        <div class="reply-guy-loading-text">\n          Crafting the perfect reply\n          <span class="reply-guy-loading-dots">\n            <span class="reply-guy-loading-dot"></span>\n            <span class="reply-guy-loading-dot"></span>\n            <span class="reply-guy-loading-dot"></span>\n          </span>\n        </div>\n      </div>\n    `;const e=this.container.getBoundingClientRect();this.overlay.style.position="fixed";const n=.8*window.innerHeight;window.innerHeight-e.bottom-16<n&&e.top>n?(this.overlay.style.bottom=window.innerHeight-e.top+8+"px",this.overlay.style.top="auto"):this.overlay.style.top=`${Math.min(e.bottom+8,window.innerHeight-n)}px`,this.overlay.style.left=`${Math.min(e.left,window.innerWidth-500)}px`,this.overlay.style.width="400px",document.body.appendChild(this.overlay)}showError(e){this.remove(),this.overlay=document.createElement("div"),this.overlay.className="reply-guy-overlay",this.overlay.innerHTML=`\n      <style>\n        ${this.getComprehensiveStyles()}\n        .reply-guy-error {\n          padding: 20px;\n          text-align: center;\n          color: #dc3545;\n          font-size: 14px;\n          line-height: 1.5;\n        }\n        .reply-guy-error-icon {\n          font-size: 48px;\n          margin-bottom: 12px;\n        }\n      </style>\n      <div class="reply-guy-header">\n        <div class="reply-guy-title">\n          <img src="${chrome.runtime.getURL("icons/reply_guy_logo.png")}" class="reply-guy-logo-icon" alt="Reply Guy" />\n          <span>Reply Guy</span>\n        </div>\n        <button class="reply-guy-close" aria-label="Close">×</button>\n      </div>\n      <div class="reply-guy-error">\n        <div class="reply-guy-error-icon">⚠️</div>\n        ${this.escapeHtml(e)}\n      </div>\n    `;const n=this.container.getBoundingClientRect();this.overlay.style.position="fixed";const t=.8*window.innerHeight;window.innerHeight-n.bottom-16<t&&n.top>t?(this.overlay.style.bottom=window.innerHeight-n.top+8+"px",this.overlay.style.top="auto"):this.overlay.style.top=`${Math.min(n.bottom+8,window.innerHeight-t)}px`,this.overlay.style.left=`${Math.min(n.left,window.innerWidth-500)}px`,this.overlay.style.width="400px",this.overlay.querySelector(".reply-guy-close")?.addEventListener("click",()=>this.remove()),document.body.appendChild(this.overlay)}remove(){this.overlay&&(this.overlay.remove(),this.overlay=null,document.removeEventListener("click",this.handleOutsideClick))}escapeHtml(e){const n=document.createElement("div");return n.textContent=e,n.innerHTML}showResearchSuggestions(){const e=this.overlay?.querySelector("#reply-guy-research-suggestions"),n=this.overlay?.querySelector(".reply-guy-suggestion-chips"),t=this.overlay?.querySelector("#reply-guy-perplexity");e&&n&&this.researchSuggestions.length&&(e.style.display="block",n.innerHTML="",this.researchSuggestions.forEach(e=>{const o=document.createElement("button");o.className="reply-guy-suggestion-chip",o.textContent=e,o.addEventListener("click",()=>{this.perplexityGuidance=e,t&&(t.value=e)}),n.appendChild(o)}))}insertGeneratedReply(e,n){const t=document.querySelector('[data-testid="tweetTextarea_0"]')||document.querySelector('[role="textbox"][contenteditable="true"]')||e.querySelector('[role="textbox"]');if(t){t.focus();const e=new InputEvent("beforeinput",{bubbles:!0,cancelable:!0,inputType:"deleteContentBackward"});t.dispatchEvent(e),t.textContent="";try{if(navigator.clipboard&&window.isSecureContext)return void navigator.clipboard.writeText(n).then(()=>{t.focus();const e=document.createRange();e.selectNodeContents(t);const o=window.getSelection();o?.removeAllRanges(),o?.addRange(e),new ClipboardEvent("paste",{bubbles:!0,cancelable:!0,clipboardData:new DataTransfer}),document.execCommand("insertText",!1,n),console.log("[ReplyGuy] Inserted reply using clipboard method")}).catch(()=>{this.insertUsingInputEvents(t,n)})}catch(e){console.log("[ReplyGuy] Clipboard API not available, using input events")}this.insertUsingInputEvents(t,n)}else console.error("[ReplyGuy] Could not find compose textbox")}insertUsingInputEvents(e,n){e.focus();const t=Object.getOwnPropertyDescriptor(window.HTMLInputElement.prototype,"value")?.set||Object.getOwnPropertyDescriptor(window.HTMLTextAreaElement.prototype,"value")?.set;if(t&&(e instanceof HTMLInputElement||e instanceof HTMLTextAreaElement)){t.call(e,n);const o=new Event("input",{bubbles:!0});e.dispatchEvent(o)}else{e.textContent=n;const t=document.createRange(),o=e.firstChild||e;t.setStart(o,e.textContent.length),t.setEnd(o,e.textContent.length);const i=window.getSelection();i?.removeAllRanges(),i?.addRange(t);const r=new InputEvent("input",{bubbles:!0,cancelable:!0,inputType:"insertText",data:n}),l=new InputEvent("beforeinput",{bubbles:!0,cancelable:!0,inputType:"insertText",data:n});e.dispatchEvent(l),e.dispatchEvent(r);const s=new CompositionEvent("compositionend",{bubbles:!0,cancelable:!0,data:n});e.dispatchEvent(s)}e.focus(),console.log("[ReplyGuy] Inserted reply using input events")}}class n{constructor(){this.observer=null,this.overlays=new WeakMap,this.isAuthenticated=!1,this.safetyNetInterval=null}initialize(){console.log("[ReplyGuy] Initializing X integration"),console.log("[ReplyGuy] Current URL:",window.location.href),chrome.runtime?.id?(chrome?.runtime?.sendMessage&&chrome.runtime.sendMessage({action:"checkAuth"}).then(e=>{e?.success&&(this.isAuthenticated=e.data?.isAuthenticated||!1,console.log("[ReplyGuy] Auth status:",this.isAuthenticated))}).catch(e=>{e?.message?.includes("Extension context invalidated")?console.error("[ReplyGuy] Extension context invalidated during auth check"):console.error("[ReplyGuy] Failed to check auth:",e)}),this.setupObserver(),this.injectReplyButtons(),this.safetyNetInterval=setInterval(()=>{this.injectReplyButtons()},2e3)):console.error("[ReplyGuy] Extension context invalid during initialization")}cleanup(){this.observer&&(this.observer.disconnect(),this.observer=null),this.safetyNetInterval&&(clearInterval(this.safetyNetInterval),this.safetyNetInterval=null),document.querySelectorAll('[data-testid="replyguy"]').forEach(e=>e.remove())}handleUrlChange(){setTimeout(()=>this.injectReplyButtons(),500)}setupObserver(){let e=null;this.observer=new MutationObserver(()=>{e&&clearTimeout(e),e=setTimeout(()=>{this.injectReplyButtons()},300)}),this.observer.observe(document.body,{childList:!0,subtree:!0})}injectReplyButtons(){const e=document.querySelectorAll("article");0!==e.length&&e.forEach((e,n)=>{if(e.querySelector('[data-testid="replyguy"]'))return;const t=e.querySelector('[role="group"]');if(!t)return;const o=t.querySelector('[data-testid="reply"]')||t.querySelector('[aria-label*="Reply"]');o&&this.createReplyGuyIcon(o,e)})}findReplyButtons(){const e=['[data-testid="reply"]','[aria-label*="Reply"]','[role="button"][aria-label*="Reply"]','div[role="button"] svg path[d*="M1.751 10c0-4.42"]'];let n=[];for(const t of e){const e=document.querySelectorAll(t);if(console.log(`[ReplyGuy] Selector "${t}" found ${e.length} elements`),e.length>0){console.log(`[ReplyGuy] Using ${e.length} reply buttons with selector: ${t}`),n=Array.from(e);break}}if(0===n.length){console.log("[ReplyGuy] No reply buttons found with any selector"),console.log("[ReplyGuy] Sample of buttons on page:");const e=document.querySelectorAll('[role="button"]');console.log(`[ReplyGuy] Total buttons with role="button": ${e.length}`),e.length>0&&Array.from(e).slice(0,5).forEach((e,n)=>{console.log(`[ReplyGuy] Button ${n}:`,e.getAttribute("aria-label"),e.getAttribute("data-testid"))})}return n}createReplyGuyIcon(e,n){const t=document.createElement("div");t.id=`replyguy-btn-${Date.now()}`,t.setAttribute("role","button"),t.setAttribute("data-testid","replyguy"),t.setAttribute("tabindex","0"),Object.assign(t.style,{display:"inline-flex",alignItems:"center",justifyContent:"center",width:"34px",height:"34px",marginLeft:"8px",marginRight:"8px",cursor:"pointer",position:"relative",borderRadius:"50%",transition:"transform 0.2s ease, background-color 0.2s ease",zIndex:"1000"}),t.innerHTML=`<img src="${chrome.runtime.getURL("icons/reply_guy_logo.png")}" style="width: 20px; height: 20px;" />`,t.addEventListener("mouseenter",()=>{t.style.transform="scale(1.1)",t.style.backgroundColor="rgba(102, 126, 234, 0.1)"}),t.addEventListener("mouseleave",()=>{t.style.transform="scale(1)",t.style.backgroundColor="transparent"}),t.addEventListener("click",e=>{e.stopPropagation(),this.handleReplyGuyClick(n)});let o=null,i="";const r=e.closest('[role="group"]');if(r&&(o=r,i="role=group"),!o){let n=e.parentElement;for(;n&&n!==document.body;){if(n.querySelectorAll('[role="button"]').length>=3){o=n,i="multiple-buttons-parent";break}n=n.parentElement}}if(!o&&e.parentElement&&(o=e.parentElement,i="direct-parent"),o){if("role=group"===i){const n=Array.from(o.children).filter(e=>"button"===e.getAttribute("role")||e.querySelector('[role="button"]'));n.length>=2?o.insertBefore(t,n[1]):e.parentElement&&e.parentElement.parentElement===o?o.insertBefore(t,e.parentElement.nextSibling):o.appendChild(t)}else e.parentElement&&e.parentElement.parentElement===o?o.insertBefore(t,e.parentElement.nextSibling):o.appendChild(t);console.log(`[ReplyGuy] Button injected using strategy: ${i}`),console.log(`[ReplyGuy] Button ID: ${t.id}`),console.log("[ReplyGuy] Button visibility:",{offsetWidth:t.offsetWidth,offsetHeight:t.offsetHeight,display:window.getComputedStyle(t).display,visibility:window.getComputedStyle(t).visibility})}else console.log("[ReplyGuy] Could not find suitable container for button")}async handleReplyGuyClick(n){if(console.log("[ReplyGuy] Button clicked"),!chrome.runtime?.id)return console.error("[ReplyGuy] Extension context invalidated"),void alert("Reply Guy extension needs to be refreshed. Please reload this page.");try{const e=await chrome.runtime.sendMessage({action:"checkAuth"});if(!e?.success||!e.data?.isAuthenticated)return console.log("[ReplyGuy] User not authenticated, prompting to login"),void(confirm("Please sign in to Reply Guy to use this feature. Would you like to sign in now?")&&chrome.runtime.sendMessage({action:"openLogin"}).catch(e=>{console.error("[ReplyGuy] Failed to open login:",e)}))}catch(e){return e instanceof Error&&e.message.includes("Extension context invalidated")?(console.error("[ReplyGuy] Extension context invalidated"),void alert("Reply Guy extension needs to be refreshed. Please reload this page.")):void console.error("[ReplyGuy] Auth check error:",e)}const t=n.querySelector('[data-testid="tweetText"]'),o=t?.textContent?.trim()||"";if(!o)return console.error("[ReplyGuy] Could not find tweet text"),void alert("Could not find tweet text. Please try again.");console.log("[ReplyGuy] Tweet text:",o.substring(0,50)+"...");const i=n.querySelector('[data-testid="reply"]');if(!i)return console.error("[ReplyGuy] Could not find reply button"),void alert("Could not find reply button. Please try again.");try{i.click(),setTimeout(async()=>{const n=document.querySelector('[data-testid="tweetTextarea_0_label"]')?.parentElement;if(!n)return console.error("Could not find compose area"),void alert("Could not find compose area. Please try clicking reply again.");let t=this.overlays.get(n);t||(t=new e(n),this.overlays.set(n,t)),t.showOptions(o,async e=>{t.showLoading();try{if(!chrome.runtime?.id)return void t.showError("Extension needs to be refreshed. Please reload this page.");const n=await chrome.runtime.sendMessage({action:"generateReply",data:e});if(console.log("[ReplyGuy] Generate reply response:",n),n.success){const e=n.data.data||n.data;console.log("[ReplyGuy] Reply data extracted:",e),e.trackingStatus?(console.log("[ReplyGuy] 📊 Daily Usage Tracking Status:",{success:e.trackingStatus.success,date:e.trackingStatus.date,timezone:e.trackingStatus.timezone,error:e.trackingStatus.error||"none"}),e.trackingStatus.success||console.error("[ReplyGuy] ❌ Failed to track daily usage:",e.trackingStatus.error)):console.warn("[ReplyGuy] ⚠️ No tracking status returned from API"),t.showGeneratedReply(e.reply||"Failed to generate reply",e.memeUrl,e),chrome.runtime.sendMessage({action:"checkForCelebration"})}else t.showError(n.error||"Failed to generate reply")}catch(e){e instanceof Error&&e.message.includes("Extension context invalidated")?t.showError("Extension needs to be refreshed. Please reload this page."):t.showError("Failed to connect to Reply Guy. Please make sure you are logged in."),console.error("[ReplyGuy] Error generating reply:",e)}})},500)}catch(e){console.error("[ReplyGuy] Error in reply process:",e),alert("An error occurred. Please try again.")}}insertSuggestion(e,n){const t=e.querySelector('[role="textbox"]');if(t){t.innerText=n;const e=new Event("input",{bubbles:!0});t.dispatchEvent(e),t.focus()}}insertGeneratedReply(e,n){const t=e.querySelector('[role="textbox"]');if(t){const e=Object.getOwnPropertyDescriptor(window.HTMLTextAreaElement.prototype,"value")?.set;if(e){e.call(t,n);const o=new Event("input",{bubbles:!0});t.dispatchEvent(o),t.focus()}else{t.innerText=n;const e=new Event("input",{bubbles:!0});t.dispatchEvent(e),t.focus()}}}}var t={};!function e(n,t,o,i){var r=!!(n.Worker&&n.Blob&&n.Promise&&n.OffscreenCanvas&&n.OffscreenCanvasRenderingContext2D&&n.HTMLCanvasElement&&n.HTMLCanvasElement.prototype.transferControlToOffscreen&&n.URL&&n.URL.createObjectURL),l="function"==typeof Path2D&&"function"==typeof DOMMatrix,s=function(){if(!n.OffscreenCanvas)return!1;var e=new OffscreenCanvas(1,1),t=e.getContext("2d");t.fillRect(0,0,1,1);var o=e.transferToImageBitmap();try{t.createPattern(o,"no-repeat")}catch(e){return!1}return!0}();function a(){}function c(e){var o=t.exports.Promise,i=void 0!==o?o:n.Promise;return"function"==typeof i?new i(e):(e(a,a),null)}var p,y,d,u,g,h,m,f,x,v,b,w=(p=s,y=new Map,{transform:function(e){if(p)return e;if(y.has(e))return y.get(e);var n=new OffscreenCanvas(e.width,e.height);return n.getContext("2d").drawImage(e,0,0),y.set(e,n),n},clear:function(){y.clear()}}),R=(g=Math.floor(1e3/60),h={},m=0,"function"==typeof requestAnimationFrame&&"function"==typeof cancelAnimationFrame?(d=function(e){var n=Math.random();return h[n]=requestAnimationFrame(function t(o){m===o||m+g-1<o?(m=o,delete h[n],e()):h[n]=requestAnimationFrame(t)}),n},u=function(e){h[e]&&cancelAnimationFrame(h[e])}):(d=function(e){return setTimeout(e,g)},u=function(e){return clearTimeout(e)}),{frame:d,cancel:u}),S=(v={},function(){if(f)return f;if(!o&&r){var n=["var CONFETTI, SIZE = {}, module = {};","("+e.toString()+")(this, module, true, SIZE);","onmessage = function(msg) {","  if (msg.data.options) {","    CONFETTI(msg.data.options).then(function () {","      if (msg.data.callback) {","        postMessage({ callback: msg.data.callback });","      }","    });","  } else if (msg.data.reset) {","    CONFETTI && CONFETTI.reset();","  } else if (msg.data.resize) {","    SIZE.width = msg.data.resize.width;","    SIZE.height = msg.data.resize.height;","  } else if (msg.data.canvas) {","    SIZE.width = msg.data.canvas.width;","    SIZE.height = msg.data.canvas.height;","    CONFETTI = module.exports.create(msg.data.canvas);","  }","}"].join("\n");try{f=new Worker(URL.createObjectURL(new Blob([n])))}catch(e){return void 0!==typeof console&&"function"==typeof console.warn&&console.warn("🎊 Could not load worker",e),null}!function(e){function n(n,t){e.postMessage({options:n||{},callback:t})}e.init=function(n){var t=n.transferControlToOffscreen();e.postMessage({canvas:t},[t])},e.fire=function(t,o,i){if(x)return n(t,null),x;var r=Math.random().toString(36).slice(2);return x=c(function(o){function l(n){n.data.callback===r&&(delete v[r],e.removeEventListener("message",l),x=null,w.clear(),i(),o())}e.addEventListener("message",l),n(t,r),v[r]=l.bind(null,{data:{callback:r}})})},e.reset=function(){for(var n in e.postMessage({reset:!0}),v)v[n](),delete v[n]}}(f)}return f}),M={particleCount:50,angle:90,spread:45,startVelocity:45,decay:.9,gravity:1,drift:0,ticks:200,x:.5,y:.5,shapes:["square","circle"],zIndex:100,colors:["#26ccff","#a25afd","#ff5e7e","#88ff5a","#fcff42","#ffa62d","#ff36ff"],disableForReducedMotion:!1,scalar:1};function k(e,n,t){return function(e,n){return n?n(e):e}(e&&null!=e[n]?e[n]:M[n],t)}function L(e){return e<0?0:Math.floor(e)}function C(e,n){return Math.floor(Math.random()*(n-e))+e}function E(e){return parseInt(e,16)}function T(e){return e.map(G)}function G(e){var n=String(e).replace(/[^0-9a-f]/gi,"");return n.length<6&&(n=n[0]+n[0]+n[1]+n[1]+n[2]+n[2]),{r:E(n.substring(0,2)),g:E(n.substring(2,4)),b:E(n.substring(4,6))}}function I(e){e.width=document.documentElement.clientWidth,e.height=document.documentElement.clientHeight}function P(e){var n=e.getBoundingClientRect();e.width=n.width,e.height=n.height}function A(e){var n=e.angle*(Math.PI/180),t=e.spread*(Math.PI/180);return{x:e.x,y:e.y,wobble:10*Math.random(),wobbleSpeed:Math.min(.11,.1*Math.random()+.05),velocity:.5*e.startVelocity+Math.random()*e.startVelocity,angle2D:-n+(.5*t-Math.random()*t),tiltAngle:(.5*Math.random()+.25)*Math.PI,color:e.color,shape:e.shape,tick:0,totalTicks:e.ticks,decay:e.decay,drift:e.drift,random:Math.random()+2,tiltSin:0,tiltCos:0,wobbleX:0,wobbleY:0,gravity:3*e.gravity,ovalScalar:.6,scalar:e.scalar,flat:e.flat}}function q(e,t){var s,a=!e,p=!!k(t||{},"resize"),y=!1,d=k(t,"disableForReducedMotion",Boolean),u=r&&k(t||{},"useWorker")?S():null,g=a?I:P,h=!(!e||!u||!e.__confetti_initialized),m="function"==typeof matchMedia&&matchMedia("(prefers-reduced-motion)").matches;function f(n,t,r){for(var a=k(n,"particleCount",L),p=k(n,"angle",Number),y=k(n,"spread",Number),d=k(n,"startVelocity",Number),u=k(n,"decay",Number),h=k(n,"gravity",Number),m=k(n,"drift",Number),f=k(n,"colors",T),x=k(n,"ticks",Number),v=k(n,"shapes"),b=k(n,"scalar"),S=!!k(n,"flat"),M=function(e){var n=k(e,"origin",Object);return n.x=k(n,"x",Number),n.y=k(n,"y",Number),n}(n),E=a,G=[],I=e.width*M.x,P=e.height*M.y;E--;)G.push(A({x:I,y:P,angle:p,spread:y,startVelocity:d,color:f[E%f.length],shape:v[C(0,v.length)],ticks:x,decay:u,gravity:h,drift:m,scalar:b,flat:S}));return s?s.addFettis(G):(s=function(e,n,t,r,s){var a,p,y=n.slice(),d=e.getContext("2d"),u=c(function(n){function c(){a=p=null,d.clearRect(0,0,r.width,r.height),w.clear(),s(),n()}a=R.frame(function n(){!o||r.width===i.width&&r.height===i.height||(r.width=e.width=i.width,r.height=e.height=i.height),r.width||r.height||(t(e),r.width=e.width,r.height=e.height),d.clearRect(0,0,r.width,r.height),(y=y.filter(function(e){return function(e,n){n.x+=Math.cos(n.angle2D)*n.velocity+n.drift,n.y+=Math.sin(n.angle2D)*n.velocity+n.gravity,n.velocity*=n.decay,n.flat?(n.wobble=0,n.wobbleX=n.x+10*n.scalar,n.wobbleY=n.y+10*n.scalar,n.tiltSin=0,n.tiltCos=0,n.random=1):(n.wobble+=n.wobbleSpeed,n.wobbleX=n.x+10*n.scalar*Math.cos(n.wobble),n.wobbleY=n.y+10*n.scalar*Math.sin(n.wobble),n.tiltAngle+=.1,n.tiltSin=Math.sin(n.tiltAngle),n.tiltCos=Math.cos(n.tiltAngle),n.random=Math.random()+2);var t=n.tick++/n.totalTicks,o=n.x+n.random*n.tiltCos,i=n.y+n.random*n.tiltSin,r=n.wobbleX+n.random*n.tiltCos,s=n.wobbleY+n.random*n.tiltSin;if(e.fillStyle="rgba("+n.color.r+", "+n.color.g+", "+n.color.b+", "+(1-t)+")",e.beginPath(),l&&"path"===n.shape.type&&"string"==typeof n.shape.path&&Array.isArray(n.shape.matrix))e.fill(function(e,n,t,o,i,r,l){var s=new Path2D(e),a=new Path2D;a.addPath(s,new DOMMatrix(n));var c=new Path2D;return c.addPath(a,new DOMMatrix([Math.cos(l)*i,Math.sin(l)*i,-Math.sin(l)*r,Math.cos(l)*r,t,o])),c}(n.shape.path,n.shape.matrix,n.x,n.y,.1*Math.abs(r-o),.1*Math.abs(s-i),Math.PI/10*n.wobble));else if("bitmap"===n.shape.type){var a=Math.PI/10*n.wobble,c=.1*Math.abs(r-o),p=.1*Math.abs(s-i),y=n.shape.bitmap.width*n.scalar,d=n.shape.bitmap.height*n.scalar,u=new DOMMatrix([Math.cos(a)*c,Math.sin(a)*c,-Math.sin(a)*p,Math.cos(a)*p,n.x,n.y]);u.multiplySelf(new DOMMatrix(n.shape.matrix));var g=e.createPattern(w.transform(n.shape.bitmap),"no-repeat");g.setTransform(u),e.globalAlpha=1-t,e.fillStyle=g,e.fillRect(n.x-y/2,n.y-d/2,y,d),e.globalAlpha=1}else if("circle"===n.shape)e.ellipse?e.ellipse(n.x,n.y,Math.abs(r-o)*n.ovalScalar,Math.abs(s-i)*n.ovalScalar,Math.PI/10*n.wobble,0,2*Math.PI):function(e,n,t,o,i,r,l,s){e.save(),e.translate(n,t),e.rotate(r),e.scale(o,i),e.arc(0,0,1,0,s,void 0),e.restore()}(e,n.x,n.y,Math.abs(r-o)*n.ovalScalar,Math.abs(s-i)*n.ovalScalar,Math.PI/10*n.wobble,0,2*Math.PI);else if("star"===n.shape)for(var h=Math.PI/2*3,m=4*n.scalar,f=8*n.scalar,x=n.x,v=n.y,b=5,R=Math.PI/b;b--;)x=n.x+Math.cos(h)*f,v=n.y+Math.sin(h)*f,e.lineTo(x,v),h+=R,x=n.x+Math.cos(h)*m,v=n.y+Math.sin(h)*m,e.lineTo(x,v),h+=R;else e.moveTo(Math.floor(n.x),Math.floor(n.y)),e.lineTo(Math.floor(n.wobbleX),Math.floor(i)),e.lineTo(Math.floor(r),Math.floor(s)),e.lineTo(Math.floor(o),Math.floor(n.wobbleY));return e.closePath(),e.fill(),n.tick<n.totalTicks}(d,e)})).length?a=R.frame(n):c()}),p=c});return{addFettis:function(e){return y=y.concat(e),u},canvas:e,promise:u,reset:function(){a&&R.cancel(a),p&&p()}}}(e,G,g,t,r),s.promise)}function x(t){var o=d||k(t,"disableForReducedMotion",Boolean),i=k(t,"zIndex",Number);if(o&&m)return c(function(e){e()});a&&s?e=s.canvas:a&&!e&&(e=function(e){var n=document.createElement("canvas");return n.style.position="fixed",n.style.top="0px",n.style.left="0px",n.style.pointerEvents="none",n.style.zIndex=e,n}(i),document.body.appendChild(e)),p&&!h&&g(e);var r={width:e.width,height:e.height};function l(){if(u){var n={getBoundingClientRect:function(){if(!a)return e.getBoundingClientRect()}};return g(n),void u.postMessage({resize:{width:n.width,height:n.height}})}r.width=r.height=null}function x(){s=null,p&&(y=!1,n.removeEventListener("resize",l)),a&&e&&(document.body.contains(e)&&document.body.removeChild(e),e=null,h=!1)}return u&&!h&&u.init(e),h=!0,u&&(e.__confetti_initialized=!0),p&&!y&&(y=!0,n.addEventListener("resize",l,!1)),u?u.fire(t,r,x):f(t,r,x)}return x.reset=function(){u&&u.reset(),s&&s.reset()},x}function z(){return b||(b=q(null,{useWorker:!0,resize:!0})),b}t.exports=function(){return z().apply(this,arguments)},t.exports.reset=function(){z().reset()},t.exports.create=q,t.exports.shapeFromPath=function(e){if(!l)throw new Error("path confetti are not supported in this browser");var n,t;"string"==typeof e?n=e:(n=e.path,t=e.matrix);var o=new Path2D(n),i=document.createElement("canvas").getContext("2d");if(!t){for(var r,s,a=1e3,c=a,p=a,y=0,d=0,u=0;u<a;u+=2)for(var g=0;g<a;g+=2)i.isPointInPath(o,u,g,"nonzero")&&(c=Math.min(c,u),p=Math.min(p,g),y=Math.max(y,u),d=Math.max(d,g));r=y-c,s=d-p;var h=Math.min(10/r,10/s);t=[h,0,0,h,-Math.round(r/2+c)*h,-Math.round(s/2+p)*h]}return{type:"path",path:n,matrix:t}},t.exports.shapeFromText=function(e){var n,t=1,o="#000000",i='"Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji", "EmojiOne Color", "Android Emoji", "Twemoji Mozilla", "system emoji", sans-serif';"string"==typeof e?n=e:(n=e.text,t="scalar"in e?e.scalar:t,i="fontFamily"in e?e.fontFamily:i,o="color"in e?e.color:o);var r=10*t,l=r+"px "+i,s=new OffscreenCanvas(r,r),a=s.getContext("2d");a.font=l;var c=a.measureText(n),p=Math.ceil(c.actualBoundingBoxRight+c.actualBoundingBoxLeft),y=Math.ceil(c.actualBoundingBoxAscent+c.actualBoundingBoxDescent),d=c.actualBoundingBoxLeft+2,u=c.actualBoundingBoxAscent+2;p+=4,y+=4,(a=(s=new OffscreenCanvas(p,y)).getContext("2d")).font=l,a.fillStyle=o,a.fillText(n,d,u);var g=1/t;return{type:"bitmap",bitmap:s.transferToImageBitmap(),matrix:[g,0,0,g,-p*g/2,-y*g/2]}}}(function(){return"undefined"!=typeof window?window:"undefined"!=typeof self?self:this||{}}(),t,!1);const o=t.exports;t.exports.create,console.log("[ReplyGuy Content] Script loaded at:",(new Date).toISOString(),window.location.href);let i=null,r={isAuthenticated:!1};chrome.runtime.onMessage.addListener((e,t,l)=>{"authStateChanged"===e.action?(r=e.data,console.log("[ReplyGuy Content] Auth state changed:",r),i&&i.cleanup(),i=new n,i.initialize()):"triggerCelebration"===e.action&&function(){const e={origin:{y:.7},zIndex:9999};function n(n,t){o({...e,...t,particleCount:Math.floor(200*n)})}n(.25,{spread:26,startVelocity:55}),n(.2,{spread:60}),n(.35,{spread:100,decay:.91,scalar:.8}),n(.1,{spread:120,startVelocity:25,decay:.92,scalar:1.2}),n(.1,{spread:120,startVelocity:45})}()});let l=location.href;new MutationObserver(()=>{const e=location.href;e!==l&&(l=e,i&&i.handleUrlChange())}).observe(document,{subtree:!0,childList:!0}),async function(){console.log("[ReplyGuy Content] Initializing on:",window.location.href);try{console.log("[ReplyGuy Content] Checking authentication...");const e=await chrome.runtime.sendMessage({action:"checkAuth"});console.log("[ReplyGuy Content] Auth response:",e),e.success&&(r=e.data,console.log("[ReplyGuy Content] Auth state:",r)),console.log("[ReplyGuy Content] Initializing Twitter integration"),i=new n,i.initialize()}catch(e){console.error("[ReplyGuy Content] Initialization error:",e)}}()})();