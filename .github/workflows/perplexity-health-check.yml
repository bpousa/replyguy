name: Perplexity Health Check

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  health-check:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check Perplexity Environment Variables
        env:
          PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
          NEXT_PUBLIC_ENABLE_PERPLEXITY: ${{ vars.NEXT_PUBLIC_ENABLE_PERPLEXITY || 'true' }}
        run: |
          echo "Checking Perplexity configuration..."
          
          if [ -z "$PERPLEXITY_API_KEY" ]; then
            echo "❌ PERPLEXITY_API_KEY is not set in GitHub secrets"
            echo "This will cause research features to fail in production"
            exit 1
          fi
          
          if [ "$NEXT_PUBLIC_ENABLE_PERPLEXITY" = "false" ]; then
            echo "⚠️ NEXT_PUBLIC_ENABLE_PERPLEXITY is disabled"
            echo "Research features will be unavailable"
            exit 1
          fi
          
          echo "✅ Perplexity environment variables are correctly configured"
      
      - name: Test Perplexity API Connectivity
        env:
          PERPLEXITY_API_KEY: ${{ secrets.PERPLEXITY_API_KEY }}
        run: |
          echo "Testing Perplexity API connectivity..."
          
          response=$(curl -s -w "%{http_code}" -o /tmp/perplexity_response.json \
            -X POST https://api.perplexity.ai/chat/completions \
            -H "Authorization: Bearer $PERPLEXITY_API_KEY" \
            -H "Content-Type: application/json" \
            -d '{
              "model": "sonar-small-online",
              "messages": [
                {
                  "role": "system",
                  "content": "You are a helpful assistant."
                },
                {
                  "role": "user", 
                  "content": "Test connection - what is 1+1?"
                }
              ],
              "max_tokens": 50,
              "temperature": 0.2
            }')
          
          echo "API Response Code: $response"
          
          if [ "$response" != "200" ]; then
            echo "❌ Perplexity API test failed with status: $response"
            echo "Response body:"
            cat /tmp/perplexity_response.json
            exit 1
          fi
          
          echo "✅ Perplexity API connection successful"
          echo "Response preview:"
          head -c 200 /tmp/perplexity_response.json
          echo ""
      
      - name: Validate API Response Format
        run: |
          echo "Validating API response format..."
          
          # Check if response has expected structure
          if ! jq -e '.choices[0].message.content' /tmp/perplexity_response.json > /dev/null; then
            echo "❌ Perplexity API response missing expected structure"
            echo "Full response:"
            cat /tmp/perplexity_response.json
            exit 1
          fi
          
          echo "✅ API response format is valid"